metaclasses:
        - superdivision
        - lane
        - totals

subdivisions:
        plurinominali:
                type: Plurinominale
                functions:
                        - totals: lista
                          name: liste # Il totale delle funzioni sarà in sub_liste()

totals:
       # Queste sono le funzioni sotto totals,
       # gestiscono i parametri di sbarramento e li inoltrano alle funzioni che chiamano
        lista:
                type: aggregate # passa da un dataframe con chiavi non univoche ad un
                                # dataframe con chiavi univoche
                keys:
                        - Lista
                source: # this will be first parsed by parse_source
                        # and the resulting function called, the result used as the input
                        type: fun
                        name: self.subs_plurinominali_lista
                ops: # Dizionario che per ogni colonna (a parte le chiavi), specifica
                     # l'operazione
                        Voti: sum
                key_type: # Il tipo del primo elemento (serve per fare filter)
                        Lista: Partito
        coalizione:
                type: aggregate 
                keys:
                        - Coalizione
                source: 
                        type: fun
                        name: self.subs_plurinominali_coalizione
                ops: 
                        Voti: sum
                key_type: 
                        Coalizione: Coalizione

totals_support: # Funzioni che sono definite tramite total ma non effettuano filtri o inoltrano
                # argomenti
        elettore_lista:
                type: transform
                source:
                        totals: lista # questo tipo viene parsato da totals nella fase
                                      # di preparazione della configurazione
                apply: # applica trasformazioni a differenti colonne, o linee
                       # non cambia il numero di colonne a meno che non si applichi a tutto
                       # il dataframe
                        - type: column # Applica una funzione a ogni singola cella di una colonna
                          column: Lista 
                          column_type: Partito
                          source: # la funzione verrà chiamata con locals che ha
                                  # self: <inst cella> (come se fosse eseguita dentro la cella
                                  type: fun
                                  name: commons.run_fun # come getattr ma esegue una funzione
                                  args:
                                          - Elettore
                          replace_name: Elettore

        eleggibili:
                type: combine # combines multiple results into one
                function: commons.concat
                args:
                        - type: scalar
                          source:
                                  totals: coalizione
                                  args:
                                          - coal_eletta # questo è come si aggiunge un filtro
                        - type: scalar
                          source:
                                  totals: lista
                                  args:
                                          - eletta_sola
                                  rename: # rinomina le colonne con questo dizionario
                                          # assume che il risultato della funzione sia un df
                                          Lista: Coalizione
                columns: # restituisce una slice, con le colonne nell'ordine dato
                        - Coalizione -> Elettore # rinomina anche la colonna
                        - Voti
       
        ripartisci_seggi:
                type: combine
                fun: commons.hondt
                args:
                        - type: dataframe # tutti i dataframe saranno combinati
                          source:
                                  totals: liste
                                  args:
                                          - eletta
                                  rename:
                                          Lista: Party # hondt accetta Party, non Lista
                                          Voti: Votes
                        - type: dataframe
                          source:
                                  type: fun
                                  name: self.elettore_lista
                                  columns:
                                          - Lista -> Party
                                          - Elettore -> Coalizione
                        - type: series # per ogni chiave c'è solo un record, cui accedo come se
                                       # fosse un dizionario
                          source:
                                  type: kwarg # accede alla variabile kwarg
                                  name: seggi
                                  rename:
                                        Seggi: seats
                                        Elettore: Coalizione
                keys: # le colonne che uso per merge dataframe e selezione della serie
                        - Coalizione
                rename:
                        Party: Lista
                        Seats: Seggi
                        Remainder: RestoCircoLista
                        RemainderUsed: RestoCircoListaUsato

lanes_support: # funzioni chiamate dalle lane
        propose:
                elettori:
                        source:
                                type: fun
                                name: commons.hondt
                                args: # passati in ordine
                                        - source:
                                                type: fun
                                                name: self.eleggibili
                                                columns:
                                                        - Elettore -> Party
                                                        - Voti -> Votes
                                        - source:
                                                type: fun
                                                name: self.subs_plurinominali_seggi
                                rename:
                                        Party: Coalizione
                                        Seats: Seggi
                                        Remainder: RestoCircoscrizioneCoal
                                        RemainderUsed: RestoCircoCoalUsed
                        distribution: # le colonne che definiscono la distribuzione
                                - Coalizione # la chiave
                                - Seggi # il valore
                        info: # la chiave è la stessa della distribution
                                - RestoCircoscrizioneCoal
                                - RestoCircoCoalUsed
                liste:
                        source:
                                type: fun
                                name: self.ripartisci_seggi
                                kwargs: # passati come kwargs
                                        seggi:
                                                source:
                                                        type: kwarg
                                                        name: distribution
                                        liste:
                                                source:
                                                        totals: lista
                                                        args:
                                                                - eletta
                        distribution:
                                - Lista
                                - Seggi
lane:
        plurinominale:
                node_type: node # potrebbe essere, head, tail, node, only
                # Le operazioni sono in formato monadico, devo definire qual è il primo valore
                # e poi a seguire ogni operazione prende il valore precedente, applica
                # l'operazione e lo sostituisce, accumula monotonicamente invece le informazioni
                #
                # Una determinata operazione potrebbe aver bisogno di dati contenuti nelle
                # informazioni, in questo caso specifico la (o le) parole chive e queste vengono
                # passate
                first_input: kwarg # Potrebbe anche essere un source se più complicato
                                   # kwarg prende la variabile keyword distribution

                sub_level: Plurinominale
                operations: # Queste sono le varie operazioni da eseguire per passare dalla 
                            # distribuzione di input a quella finale. Il risultato dello step
                            # è salvato nella variabile
                        - collect_type: elettori
                          ideal_type: $

